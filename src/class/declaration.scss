@import 'selector';
@import '../modules/sort';
@import '../modules/smart-map-merge';

@mixin declaration ($property, $value, $flags: ()) {
  @if not variable-exists('block') or $block == null {
    $block: () !global;
  }

  @if type-of($value) == 'map' {
    @each $flag, $value in $value {
      $new-flags: $flags;

      @if index((':', '<', '@', '-', '['), str-slice($flag, 0, 1)) {
        $new-flags: append($new-flags, $flag);
        $new-flags: sort($new-flags);
      }

      @include declaration($property, $value, $new-flags)
    }
  } @else {
    @if str-slice($property, 1, 9) == '-include-' {
      @if mixin-exists(mixin-dispatcher) {
        @include mixin-dispatcher($value, $flags, str-slice($property, 10));
      }
    } @else {
      @if length($flags) >= 1 {
        $previous-block: map-get-deep($block, append($flags, 'default'));

        @if $previous-block {
          $previous-block: smart-map-merge($previous-block, ($property: $value));
          $block: map-set-deep($block, append($flags, 'default'), $previous-block) !global;
        } @else {
          $block: map-set-deep($block, append($flags, 'default'), ($property: $value)) !global;
        }
      } @else {
        $block: smart-map-merge($block, ('default': ($property: $value))) !global;
      }
    }
  }
};
